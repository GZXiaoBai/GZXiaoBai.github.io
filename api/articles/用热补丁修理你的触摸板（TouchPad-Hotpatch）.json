{"title":"用热补丁修理你的触摸板（TouchPad-Hotpatch）","uid":"4f0dd3439efb7ba90d574e3fcd61c5dd","slug":"用热补丁修理你的触摸板（TouchPad-Hotpatch）","date":"2020-05-17T01:30:19.000Z","updated":"2021-06-04T10:14:50.536Z","comments":true,"path":"api/articles/用热补丁修理你的触摸板（TouchPad-Hotpatch）.json","keywords":null,"cover":"https://i.loli.net/2021/05/02/FZVbE4tw1kqgOez.jpg","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>当你的触摸板无法正常工作时，或者一点也不工作时，那你可能就需要修改ACPI来修补修补你的触摸板来，使其能够正常工作。<br>毕竟一台笔记本电脑，用不了触摸板实在是太难受了。（如果你有钱买妙控板，那就另当别论了）</p>\n<span id=\"more\"></span>\n\n<h1 id=\"确定设备路径\"><a href=\"#确定设备路径\" class=\"headerlink\" title=\"确定设备路径\"></a>确定设备路径</h1><p>1.进入<strong>Windows系统</strong>，打开<strong>设备管理器</strong>，找到<strong>人体输入学设备</strong>，确认自己是不是I2C触摸板（有可能是I2C USB），<u>如果找不到<strong>I2C HID设备</strong>，下面的鼠标又没有PS2的时候，把每个都打开看看有没有<strong>Bios Device Name</strong> 里有 <strong>I2C</strong> 的</u>。<br><img src=\"https://i.loli.net/2021/05/02/rUWx3TAZHJPEnmh.png\"></p>\n<p>2.然后右键查看属性，在详细信息里找到触摸板的<strong>位置路径</strong><br><img src=\"https://i.loli.net/2021/05/02/i679fBJCYh4jEQ8.png\"></p>\n<p>像这里的路径就是：<br><code>_SB.PCI0.I2C0.TPD0</code><br>我们把它记下来吧，之后会用到。</p>\n<h1 id=\"确定APIC-PIn\"><a href=\"#确定APIC-PIn\" class=\"headerlink\" title=\"确定APIC PIn\"></a>确定APIC PIn</h1><p>继续在<strong>Windows</strong>下，<strong>设备管理器</strong>中确认一下你的<strong>APIC Pin</strong>，到如图所示位置：</p>\n<p><img src=\"https://i.loli.net/2021/05/02/U5sSmNQqMIc4Hdb.png\"></p>\n<p>在这个地方我们也能找到需要的<strong>APIC Pin</strong>。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>声明：如果这里括号里的值大于等于 1024（10进制），直接去做热补丁，删掉所有有关操作系统的判断就好了</p></blockquote>\n<p>你也可以在<strong>Mac</strong>下查看<strong>APIC Pin</strong></p>\n<p>到Mac系统下，使用<strong>IORegistryExplorer</strong>查看<strong>APIC Pin</strong><br>在右上角搜索自己的触摸板名称，比如根据我们之前照出来的路径，触摸板设备的名称就为<strong>TPD0</strong></p>\n<p><img src=\"https://i.loli.net/2021/05/02/2ycQe3Xs6IOn17z.png\"></p>\n<p>那么我们为什么需要知道APIC Pin呢？因为<strong>APIC Pin</strong>可以帮助你判断你的触摸板的<strong>工作状态</strong>，如果你的<strong>Pin小于2F</strong>那么你的触摸板在<strong>macOS</strong>就是<strong>APIC中断模式</strong>的，你可以理解为“<strong>半免躯模式</strong>”了，几乎不需要做什么修改就能够比较好的驱动。<em><strong>当然，这是极少数的情况。</strong></em></p>\n<p>大部分人应该都是<strong>大于2F</strong>的，因此触摸板会是<strong>GPIO中断模式</strong>，但因为在macOS下<strong>绝大部分人</strong>的<strong>GPIO中断</strong>模式无法直接驱动，才需要制作热补丁来使其正常工作。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>归纳一下就是：<br><strong>Pin &lt; 2F** 或者 **无IOInterruptSpecifiers**，为**APIC**<br>**Pin &gt; 2F</strong> 需要制作热补丁使触摸板在<strong>GPIO模式</strong>下正常工作</p></blockquote>\n<h1 id=\"APIC中断，GPIO中断与轮询\"><a href=\"#APIC中断，GPIO中断与轮询\" class=\"headerlink\" title=\"APIC中断，GPIO中断与轮询\"></a>APIC中断，GPIO中断与轮询</h1><p>这里我们稍微了解一下触摸板工作的三个模式：</p>\n<ol>\n<li><strong>APIC中断</strong>：上文有提到，也就是<strong>最好的一个工作模式</strong>，当然只有<strong>极少数人</strong>有这个运气是APIC中断</li>\n<li><strong>GPIO中断</strong>：Windows系统下用的也是这个模式，是仅次于<strong>APIC中断</strong>的，比较<strong>高效</strong>，也是我们首先推荐的模式。触摸板热补丁也是主要针对<strong>GPIO中断</strong>有<strong>比较多的修改</strong>。</li>\n<li><strong>轮询</strong>：最低效的一个模式，但相比<strong>GPIO中断</strong>，这个模式的适用范围更广，大部分机子都能适用这个，虽然有时候可能有些问题，如，<strong>指针漂移</strong>或者<strong>不灵敏</strong>等，但却<strong>更容易驱动</strong>。<strong>GPIO中断无法使用</strong>的情况下，我们就选择使用<strong>轮询</strong>模式。</li>\n</ol>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>总结归纳：<br>效率：APIC中断 &gt; GPIO中断 &gt; 轮询<br>驱动难易成度：GPIO中断 &gt; 轮询 ，这里<strong>APIC中断</strong>不作讨论，看你运气。</p></blockquote>\n<h1 id=\"触摸板热补丁制作\"><a href=\"#触摸板热补丁制作\" class=\"headerlink\" title=\"触摸板热补丁制作\"></a>触摸板热补丁制作</h1><p>在这个板块，我会教你如何去做<strong>触摸板热补丁(Hotpatch)<strong>，包括</strong>GPIO中断</strong>和<strong>轮询</strong>两个模式的制作教程。我也会给出一个案例用于讲解，<em><strong>此案例请不要拿去直接用</strong></em>(没有人会那么傻吧)。</p>\n<p>首先我们用<strong>Maciasl</strong>打开<strong>DSDT</strong>，并新建一个文件。然后我们将DSDT的<strong>DefinitionBlock</strong>部分复制到新建的文件中,并将其中的<strong>DSDT</strong>的字符串改为<strong>SSDT</strong>，如图：</p>\n<p><img src=\"https://i.loli.net/2021/05/02/J5uNEW1MSKXHIP9.png\"></p>\n<p>然后我们根据之前确定的<strong>触摸板设备路径(_SB.PCI0.I2C0.TPD0)<strong>找到我们需要修改的</strong>设备(Device)<strong>。很简单，我们按</strong>Option + F</strong>在搜索框中输入<strong>自己触摸板的名称</strong>，我们这里的是<strong>TPD0</strong>，然后<strong>回车搜索</strong>，找到位于**_SB.PCI0.I2C0<strong>下的</strong>TPD0**设备。如图：</p>\n<p><img src=\"https://i.loli.net/2021/05/02/NJ6XDuLkqVH1cnO.png\"></p>\n<p>然后我们在<strong>新建的SSDT</strong>中，先添加路径<strong>Scope(_SB.PCI0.I2C0)<strong>，然后将</strong>整个TPD0设备</strong>复制进去(<em><strong>一定要注意对应括号，不要复制错了</strong></em>)，如图：</p>\n<p><img src=\"https://i.loli.net/2021/05/02/EP4fTFwYK2k1uLZ.png\"></p>\n<p>然后我们将<strong>TPD0</strong>进行<strong>改名</strong>，改成<strong>TPXX</strong>或者其他的什么都可以，只要<strong>不与DSDT中其他的设备名称相同有冲突。</strong>我们在新建的SSDT中查找<strong>TPD0</strong>，并将<strong>所有找到的TPD0</strong>，都改成<strong>TPXX</strong>(或者自己改的名称)。</p>\n<p><em><strong>改名前：</strong></em></p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;DELL  &quot;, &quot;CBX3   &quot;, 0x01072009)\n&#123;\n    Scope (_SB.PCI0.I2C0)\n    &#123;\n        Device (TPD0)\n        &#123;\n            Name (HID2, Zero)\n            Name (SBFB, ResourceTemplate ()\n            &#123;\n                I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,\n                    AddressingMode7Bit, &quot;NULL&quot;,\n                    0x00, ResourceConsumer, _Y38, Exclusive,\n                    )\n            &#125;)\n            Name (SBFG, ResourceTemplate ()\n            &#123;\n                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,\n                    &quot;\\\\_SB.PCI0.GPI0&quot;, 0x00, ResourceConsumer, ,\n                    )\n                    &#123;   &#x2F;&#x2F; Pin list\n                        0x0000\n                    &#125;\n            &#125;)\n            Name (SBFI, ResourceTemplate ()\n            &#123;\n                Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y39)\n                &#123;\n                    0x00000000,\n                &#125;\n            &#125;)\n            CreateWordField (SBFB, \\_SB.PCI0.I2C0.TPD0._Y38._ADR, BADR)  &#x2F;&#x2F; _ADR: Address\n            CreateDWordField (SBFB, \\_SB.PCI0.I2C0.TPD0._Y38._SPE, SPED)  &#x2F;&#x2F; _SPE: Speed\n            CreateWordField (SBFG, 0x17, INT1)\n            CreateDWordField (SBFI, \\_SB.PCI0.I2C0.TPD0._Y39._INT, INT2)  &#x2F;&#x2F; _INT: Interrupts\n            Method (GTID, 1, Serialized)\n            &#123;\n                If (Arg0)\n                &#123;\n                    Switch (CBID)\n                    &#123;\n                        Case (0x0896)\n                        &#123;\n                            Return (&quot;DELL0896&quot;)\n                        &#125;\n                        Case (0x0895)\n                        &#123;\n                            Return (&quot;DELL0895&quot;)\n                        &#125;\n                        Case (0x0894)\n                        &#123;\n                            Return (&quot;DELL0894&quot;)\n                        &#125;\n                        Case (0x08A5)\n                        &#123;\n                            Return (&quot;DELL08A5&quot;)\n                        &#125;\n                        Case (0x08A6)\n                        &#123;\n                            Return (&quot;DELL08A6&quot;)\n                        &#125;\n                        Case (0x089C)\n                        &#123;\n                            Return (&quot;DELL089C&quot;)\n                        &#125;\n                        Case (0x089D)\n                        &#123;\n                            Return (&quot;DELL089D&quot;)\n                        &#125;\n                        Case (0x089E)\n                        &#123;\n                            Return (&quot;DELL089E&quot;)\n                        &#125;\n                        Case (0x089F)\n                        &#123;\n                            Return (&quot;DELL089F&quot;)\n                        &#125;\n                        Case (0x08A7)\n                        &#123;\n                            Return (&quot;DELL08A7&quot;)\n                        &#125;\n                        Case (0x08A8)\n                        &#123;\n                            Return (&quot;DELL08A8&quot;)\n                        &#125;\n                        Case (0x08A9)\n                        &#123;\n                            Return (&quot;DELL08A9&quot;)\n                        &#125;\n                        Case (0x08BC)\n                        &#123;\n                            Return (&quot;DELL08BC&quot;)\n                        &#125;\n                        Case (0x08BD)\n                        &#123;\n                            Return (&quot;DELL08BD&quot;)\n                        &#125;\n                        Case (0x08C0)\n                        &#123;\n                            Return (&quot;DELL08C0&quot;)\n                        &#125;\n                        Case (0x0949)\n                        &#123;\n                            Return (&quot;DELL0949&quot;)\n                        &#125;\n                        Default\n                        &#123;\n                            Return (&quot;DELL0949&quot;)\n                        &#125;\n\n                    &#125;\n                &#125;\n                Else\n                &#123;\n                    Return (0x20)\n                &#125;\n            &#125;\n\n            Method (_INI, 0, Serialized)  &#x2F;&#x2F; _INI: Initialize\n            &#123;\n                If ((OSYS &lt; 0x07DC))\n                &#123;\n                    SRXO (GPDI, One)\n                &#125;\n\n                INT1 &#x3D; GNUM (GPDI)\n                INT2 &#x3D; INUM (GPDI)\n                If ((TPDM &#x3D;&#x3D; Zero))\n                &#123;\n                    SHPO (GPDI, One)\n                &#125;\n\n                If ((TPDT &#x3D;&#x3D; One))\n                &#123;\n                    _HID &#x3D; &quot;SYNA2393&quot;\n                    HID2 &#x3D; 0x20\n                    Return (Zero)\n                &#125;\n\n                If ((TPDT &#x3D;&#x3D; 0x02))\n                &#123;\n                    _HID &#x3D; &quot;06CB2846&quot;\n                    HID2 &#x3D; 0x20\n                    Return (Zero)\n                &#125;\n\n                If ((TPDT &#x3D;&#x3D; 0x06))\n                &#123;\n                    _HID &#x3D; &quot;ALPS0000&quot;\n                    HID2 &#x3D; 0x20\n                    BADR &#x3D; 0x2C\n                    Return (Zero)\n                &#125;\n\n                If ((TPDT &#x3D;&#x3D; 0x05))\n                &#123;\n                    _HID &#x3D; GTID (One)\n                    HID2 &#x3D; TPDH &#x2F;* \\TPDH *&#x2F;\n                    Switch (CBID)\n                    &#123;\n                        Case (0x08BC)\n                        &#123;\n                            BADR &#x3D; 0x15\n                        &#125;\n                        Case (0x08BD)\n                        &#123;\n                            BADR &#x3D; TPDB &#x2F;* \\TPDB *&#x2F;\n                        &#125;\n                        Case (0x08C0)\n                        &#123;\n                            BADR &#x3D; TPDB &#x2F;* \\TPDB *&#x2F;\n                        &#125;\n                        Default\n                        &#123;\n                            BADR &#x3D; TPDB &#x2F;* \\TPDB *&#x2F;\n                        &#125;\n\n                    &#125;\n\n                    If ((TPDS &#x3D;&#x3D; Zero))\n                    &#123;\n                        SPED &#x3D; 0x000186A0\n                    &#125;\n\n                    If ((TPDS &#x3D;&#x3D; One))\n                    &#123;\n                        SPED &#x3D; 0x00061A80\n                    &#125;\n\n                    If ((TPDS &#x3D;&#x3D; 0x02))\n                    &#123;\n                        SPED &#x3D; 0x000F4240\n                    &#125;\n\n                    Return (Zero)\n                &#125;\n            &#125;\n\n            Name (_HID, &quot;XXXX0000&quot;)  &#x2F;&#x2F; _HID: Hardware ID\n            Name (_CID, &quot;PNP0C50&quot; &#x2F;* HID Protocol Device (I2C bus) *&#x2F;)  &#x2F;&#x2F; _CID: Compatible ID\n            Name (_S0W, 0x03)  &#x2F;&#x2F; _S0W: S0 Device Wake State\n            Method (_DSM, 4, Serialized)  &#x2F;&#x2F; _DSM: Device-Specific Method\n            &#123;\n                If ((Arg0 &#x3D;&#x3D; HIDG))\n                &#123;\n                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))\n                &#125;\n\n                If ((Arg0 &#x3D;&#x3D; TP7G))\n                &#123;\n                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))\n                &#125;\n\n                Return (Buffer (One)\n                &#123;\n                     0x00                                             &#x2F;&#x2F; .\n                &#125;)\n            &#125;\n\n            Method (_STA, 0, NotSerialized)  &#x2F;&#x2F; _STA: Status\n            &#123;\n                If (((TPDT !&#x3D; Zero) &amp;&amp; (I2CN &amp; One)))\n                &#123;\n                    Return (0x0F)\n                &#125;\n\n                Return (Zero)\n            &#125;\n\n            Method (_CRS, 0, NotSerialized)  &#x2F;&#x2F; _CRS: Current Resource Settings\n            &#123;\n                If ((OSYS &lt; 0x07DC))\n                &#123;\n                    Return (SBFI) &#x2F;* \\_SB_.PCI0.I2C0.TPD0.SBFI *&#x2F;\n                &#125;\n\n                If ((TPDM &#x3D;&#x3D; Zero))\n                &#123;\n                    Return (ConcatenateResTemplate (I2CM (I2CX, BADR, SPED), SBFG))\n                &#125;\n\n                Return (ConcatenateResTemplate (I2CM (I2CX, BADR, SPED), SBFI))\n            &#125;\n        &#125;\n    &#125;\n&#125;</code></pre>\n\n<p><em><strong>改名后：</strong></em></p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;DELL  &quot;, &quot;CBX3   &quot;, 0x01072009)\n&#123;\n    Scope (_SB.PCI0.I2C0)\n    &#123;\n        Device (TPXX)  &#x2F;&#x2F;这里将TPD0改为了TPXX\n        &#123;\n            ······\n          \n            CreateWordField (SBFB, \\_SB.PCI0.I2C0.TPXX._Y38._ADR, BADR)  &#x2F;&#x2F; 这里将TPD0改为了TPXX\n            CreateDWordField (SBFB, \\_SB.PCI0.I2C0.TPXX._Y38._SPE, SPED)  &#x2F;&#x2F; 这里将TPD0改为了TPXX\n            CreateWordField (SBFG, 0x17, INT1)\n            CreateDWordField (SBFI, \\_SB.PCI0.I2C0.TPXX._Y39._INT, INT2)  &#x2F;&#x2F; 这里将TPD0改为了TPXX\n          \n             ······\n          &#x2F;&#x2F;没有改动的地方就没有列出来了\n        &#125;\n    &#125;\n&#125;</code></pre>\n\n<p>其实我们不难发现，其实也就<strong>Device</strong>和<strong>CreateWordField</strong>那里需要改。</p>\n<p>然后我们注意到<strong>Method (_CRS, 0, NotSerialized)<strong>，我们需要对他进行修改，我们看到这里有许多</strong>判断语句</strong>，其实我们只需要一句<code>Return (ConcatenateResTemplate (XXXX, XXXX))</code>，其它都可以删除掉。当然，如果你的**_CRS<strong>里面还有些</strong>赋值语句<strong>或者</strong>其他的一些语句<strong>，不只有</strong>If判断语句<strong>的话，那么就</strong>不要乱删**了，以防出现问题。</p>\n<p>修正 <code>TPXX</code> 内容：</p>\n<ul>\n<li><p>所有 <code>TPD0</code> 替换为 <code>TPXX</code>。</p>\n</li>\n<li><p>补丁中 <code>_STA</code> 部分替换为：</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">Method (_STA, 0, NotSerialized)\n&#123;\n    If (_OSI (&quot;Darwin&quot;))\n    &#123;\n        Return (0x0F)\n    &#125;\n    Else\n    &#123;\n        Return (Zero)\n    &#125;\n&#125;</code></pre>\n\n<ul>\n<li><p>查找 <code>SDS1</code> (禁止 <code>TPD0</code> 时用到的变量)，将原 <code>If (SDS1...)</code> 修改为 <code>If (one)</code>。</p>\n</li>\n<li><p>查找 <code>OSYS</code>，删除（注释掉）以下内容：</p>\n<pre class=\"line-numbers language-Swift\" data-language=\"Swift\"><code class=\"language-Swift\">&#x2F;&#x2F;If (LLess (OSYS, 0x07DC))\n&#x2F;&#x2F;&#123;\n&#x2F;&#x2F;    SRXO (GPDI, One)\n&#x2F;&#x2F;&#125;</code></pre>\n\n<p>注：<code>OSYS</code> 小于 <code>0x07DC</code> 时，I2C 设备不工作（<code>0x07DC</code>代表 Windows8）。</p>\n</li>\n</ul>\n<h2 id=\"GPIO中断实现\"><a href=\"#GPIO中断实现\" class=\"headerlink\" title=\"GPIO中断实现\"></a>GPIO中断实现</h2><p><u><strong>这里建议您先实现了轮询模式，再来移植中断</strong></u></p>\n<p>实现<strong>GPIO中断</strong>，我们需要做如下修改。</p>\n<p>首先，我们先来讲解一些<strong>触摸板的相关内容</strong>。我们可以在<strong>触摸板设备</strong>中找到如下，<strong>GpioInt</strong>（GPIO中断）、<strong>Interrupt</strong>（APIC中断） 。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>先看<strong>SBFI</strong>，这个用来实现<strong>APIC中断</strong>的，当这个值无效的时候（也就是<strong>APIC Pin</strong>大于<strong>2F</strong>的时候），走的是<strong>轮询</strong></p></blockquote>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">······\n            Name (SBFI, ResourceTemplate ()\n            &#123;\n                Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y39)\n                &#123;\n                    0x00000000,\n                &#125;\n            &#125;)\n······</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>我们再来看<strong>SBFB</strong>，这个<strong>轮询</strong>和<strong>中断</strong>都可以调用。当然也有的**_CSR<strong>里面不返回这个，而是返回了&gt;<strong>I2CM</strong>，其实两者的用处是一样的，但</strong>I2CM<strong>里面包括了更多的东西。<br>我们可以这样理解吧，</strong>I2CM**&gt;=<strong>SBFB</strong></p></blockquote>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">······\n            Name (SBFB, ResourceTemplate ()\n            &#123;\n                I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,\n                    AddressingMode7Bit, &quot;NULL&quot;,\n                    0x00, ResourceConsumer, _Y38, Exclusive,\n                    )\n            &#125;)\n······</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>这里有一个重点，那就是<strong>SBFG</strong>，其实我们看的不是<strong>SBFG</strong>这个名字，而是里面的<strong>GpioInt</strong>，这是中断所需要的。</p></blockquote>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">······\n            Name (SBFG, ResourceTemplate ()\n            &#123;\n                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,\n                    &quot;\\\\_SB.PCI0.GPI0&quot;, 0x00, ResourceConsumer, ,\n                    )\n                    &#123;   &#x2F;&#x2F; Pin list\n                        0x0000\n                    &#125;\n            &#125;)\n······</code></pre>\n\n<p>讲解完了这些，我们就正式开始动手进行修改吧<br>。</p>\n<ol>\n<li><strong>补全缺少的内容</strong>。如果你发现你没有<strong>GpioInt</strong>，那么你就复制下面那段代码到<strong>自己建立的触摸板设备</strong>(TPXX)中。</li>\n</ol>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">······\n            Name (SBFG, ResourceTemplate ()\n            &#123;\n                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,\n                    &quot;\\\\_SB.PCI0.GPI0&quot;, 0x00, ResourceConsumer, ,\n                    )\n                    &#123;   &#x2F;&#x2F; Pin list\n                        0x0000\n                    &#125;\n            &#125;)\n······</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>大部分人都是会有<strong>GpioInt</strong>的，所以一般不需要这个步骤，没有的人不仅需要补上，而且需要<strong>计算GPIO Pin</strong>。<br>所以说，有这个<strong>GpioInt</strong>的，是<strong>不需要去算GPIO Pin</strong>的，它自己会<strong>自动注入</strong>的，当然你想去算一个Gpio Pin也没事，不影响。</p></blockquote>\n<ol start=\"2\">\n<li><strong>计算GPIO Pin(可选择，见上面第1步的说明)<strong>。计算这个Pin的时候，我们需要用到刚开始我们记录的</strong>APIC Pin</strong>(我之前记录的<strong>ACPI Pin</strong>是<strong>0x33</strong>)。我们需要将<strong>APIC Pin</strong>转换为10进制，<strong>0x33</strong>转换过来就是<strong>51</strong>，然后我们把<code>APICPIN = 51</code>代入以下公式<br>\b\b\b\b<br>这里我们要根据<strong>不同的处理器</strong>选择，</li>\n</ol>\n<p><strong>Skylake</strong>：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">If APICPIN &gt; 47 And APICPIN &lt;&#x3D; 79 Then     \n    GPIOPIN &#x3D; APICPIN - 24   \n    GPIOPIN2 &#x3D; APICPIN + 72  \nElseIf APICPIN &gt; 79 And APICPIN &lt;&#x3D; 119 Then\n    GPIOPIN &#x3D; APICPIN - 24\nEnd If</code></pre>\n\n\n\n<p><strong>CoffeeLake-H</strong>：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">If APICPIN &gt; 47 And APICPIN &lt;&#x3D; 71 Then   \n    GPIOPIN &#x3D; APICPIN - 16   \n    GPIOPIN2 &#x3D; APICPIN + 240 \n    If APICPIN &gt; 47 And APICPIN &lt;&#x3D; 59 Then GPIOPIN3 &#x3D; APICPIN + 304  \nElseIf APICPIN &gt; 71 And APICPIN &lt;&#x3D; 95 Then \n    GPIOPIN &#x3D; APICPIN - 8    \n    GPIOPIN3 &#x3D; APICPIN + 152\n    GPIOPIN2 &#x3D; APICPIN + 120 \nElseIf APICPIN &gt; 95 And APICPIN &lt;&#x3D; 119 Then \n    GPIOPIN &#x3D; APICPIN        \n    If APICPIN &gt; 108 And APICPIN &lt;&#x3D; 115 Then GPIOPIN2 &#x3D; APICPIN + 20 \n End If</code></pre>\n\n\n\n<p><strong>CoffeeLake-LF</strong>和<strong>Whiskylake</strong>：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">If APICPIN &gt; 47 And APICPIN &lt;&#x3D; 71 Then      \n    GPIOPIN &#x3D; APICPIN - 16   \n    GPIOPIN2 &#x3D; APICPIN + 80  \nElseIf APICPIN &gt; 71 And APICPIN &lt;&#x3D; 95 Then  \n    GPIOPIN2 &#x3D; APICPIN + 184 \n    GPIOPIN &#x3D; APICPIN + 88   \nElseIf APICPIN &gt; 95 And APICPIN &lt;&#x3D; 119 Then \n    GPIOPIN &#x3D; APICPIN        \n    If APICPIN &gt; 108 And APICPIN &lt;&#x3D; 115 Then GPIOPIN2 &#x3D; APICPIN - 44 \nEnd If</code></pre>\n\n\n\n<p>最后，我们会得出<strong>GPIOPIN</strong>的10进制，我们将其再转为16进制即可。</p>\n<p>不过在某些极端状况下，你找到的值都不起作用的话。那么此时，你只能去尝试些比较常见的数值了，如<strong>0x17、0x1b、0x34</strong>和<strong>0x55</strong>。（仅限 SunrisePoint）</p>\n<p>计算好了就把<strong>GPIO Pin填</strong>入到<strong>SBFG</strong>中，如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Name (SBFG, ResourceTemplate ()    \n&#123;        \n     GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,           \n     \t\t\t&quot;\\\\_SB.PCI0.GPI0&quot;, 0x00, ResourceConsumer, ,            \n      \t\t)            \n      \t\t&#123;   &#x2F;&#x2F; Pin list                \n          \t\t0x0017     &#x2F;&#x2F; 这一行就是你需要填写的位置！            \n      \t\t&#125;   \n &#125;)</code></pre>\n\n<p>接下来就是**_CSR<strong>中返回语句的修改了，之前有提到我们</strong>_CSR<strong>中，我们主要修改的就是其中的</strong>Return返回语句<strong>，那么GPIO中断呢，需要返回的是</strong>SBFB<strong>（或是I2CM等）和</strong>SBFG<strong>。下面是原来的</strong>_CSR**</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Method (_CRS, 0, NotSerialized)  &#x2F;&#x2F; _CRS: Current Resource Settings\n&#123;\n    If ((OSYS &lt; 0x07DC))\n    &#123;\n        Return (SBFI) &#x2F;* \\_SB_.PCI0.I2C0.TPD0.SBFI *&#x2F;\n    &#125;\n\n    If ((TPDM &#x3D;&#x3D; Zero))\n    &#123;\n        Return (ConcatenateResTemplate (I2CM (I2CX, BADR, SPED), SBFG))\n    &#125;\n\n        Return (ConcatenateResTemplate (I2CM (I2CX, BADR, SPED), SBFI))\n&#125;</code></pre>\n<p>这里，我们可以看到上面两个<strong>判断语句</strong>，我们都可以删除，删到最后就留一条<code>Return (ConcatenateResTemplate (XXXX, XXXX))</code>就行了。如果你的<strong>CSR</strong>里面还有其他的<strong>赋值语句</strong>等等或者<strong>你搞不懂哪些可以删除</strong>，那么你就不要乱删除了，以防删错了，直接修改所有Return语句就行了。修改结果如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Method (_CRS, 0, NotSerialized)  &#x2F;&#x2F; _CRS: Current Resource Settings\n&#123;\n    Return (ConcatenateResTemplate (I2CM (I2CX, BADR, SPED), SBFG))\n  &#x2F;&#x2F;Return (ConcatenateResTemplate (SBFB, SBFG))\n&#125;</code></pre>\n\n<p>这里我们返回了<strong>I2CM</strong>和<strong>SBFG</strong>确定了<strong>GPIO中断</strong>模式。</p>\n<p>到这里<strong>GPIO中断</strong>模式的修改就完成了！</p>\n<h2 id=\"轮询模式实现\"><a href=\"#轮询模式实现\" class=\"headerlink\" title=\"轮询模式实现\"></a>轮询模式实现</h2><p>这个模式就很简单了，你不需要像<strong>GPIO中断</strong>模式那样添加GPIO Pin，我们直接修改<strong>CSR</strong>中的返回语句，最终返回为<strong>SBFB</strong>和<strong>SBFI</strong>就行，修改结果如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Method (_CRS, 0, NotSerialized)  &#x2F;&#x2F; _CRS: Current Resource Settings\n&#123;\n    Return (ConcatenateResTemplate (I2CM (I2CX, BADR, SPED), SBFI))\n  &#x2F;&#x2F;Return (ConcatenateResTemplate (SBFB, SBFI))\n&#125;</code></pre>\n\n\n\n<p>修改好了<strong>GPIO中断</strong>或者<strong>轮询</strong>到这里你的补丁本体就基本完成了！</p>\n<h1 id=\"禁用原触摸板设备\"><a href=\"#禁用原触摸板设备\" class=\"headerlink\" title=\"禁用原触摸板设备\"></a>禁用原触摸板设备</h1><p>这里我们有两个方法来禁用触摸板设备，第一个方法为<strong>预置变量法</strong>，第二个方法为**_STA的修改法**，其中，第二个方法是通用的，第一个方法不一定对所有人适用！</p>\n<h2 id=\"预置变量法禁用原设备\"><a href=\"#预置变量法禁用原设备\" class=\"headerlink\" title=\"预置变量法禁用原设备\"></a>预置变量法禁用原设备</h2><p><strong><u>目的：禁用原设备，防着你仿冒的设备与原设备发生冲突</u></strong></p>\n<p>这里需要我们观察原设备里的**_STA**，如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Method (_STA, 0, NotSerialized)  &#x2F;&#x2F; _STA: Status\n&#123;\n    If (((TPDT !&#x3D; Zero) &amp;&amp; (I2CN &amp; One)))\n    &#123;\n        Return (0x0F)\n    &#125;\n\n    Return (Zero)\n&#125;</code></pre>\n<p>我们看这个<strong>If判断语句</strong>，意思是如果<strong>TPDT</strong>不等于<strong>Zero</strong>，那么则返回<strong>0x0F</strong>，也就是启用设备。那我们不就只需要让<strong>TPDT</strong>等于0不就行了吗？那样的话，它就不会执行If语句下的内容了。接下来我们在<strong>SSDT</strong>中新建一个<strong>Scope作用域</strong>，路径为<strong>根目录</strong>并把<strong>TPDT赋值为Zero</strong>，添加<strong>If判断语句</strong>确定其只在<strong>macOS</strong>下生效，如下所示：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Scope (\\)\n&#123;\n    If (_OSI (&quot;Darwin&quot;))\n    &#123;\n        TPDT &#x3D; Zero\n    &#125;\n&#125;</code></pre>\n\n<h2 id=\"STA修改法禁用原设备\"><a href=\"#STA修改法禁用原设备\" class=\"headerlink\" title=\"_STA修改法禁用原设备\"></a>_STA修改法禁用原设备</h2><p>这个需要我们<strong>新建一个SSDT</strong>，然后我们先写入<strong>根作用域</strong>（把DSDT中的<strong>DefinitionBlock</strong>复制到SSDT中就行，然后将里面的<strong>DSDT</strong>改为<strong>SSDT</strong>），如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;DELL&quot;, &quot;CBX3&quot;, 0x01072009)\n&#123;\n&#125;</code></pre>\n\n<p>然后我们再添加<strong>Scope作用域</strong>，路径就是<strong>原设备（TPD0）</strong>的路径，如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;DELL&quot;, &quot;CBX3&quot;, 0x01072009)\n&#123;\n    Scope (_SB.PCI0.I2C0.TPD0)\n    &#123;\n    &#125;\n&#125;</code></pre>\n\n<p>然后把我下面给出的**_STA<strong>复制到这个</strong>Scope作用域**中</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Method (_STA, 0, NotSerialized)  &#x2F;&#x2F; _STA: Status\n&#123;\n    If (_OSI (&quot;Darwin&quot;))\n    &#123;\n        Return (Zero)\n    &#125;\n    Else\n    &#123;\n        Return (XSTA())\n    &#125;\n&#125;</code></pre>\n\n<p>这个**_STA<strong>的意思差不多就是，在</strong>macOS<strong>下返回</strong>Zero<strong>，也就是设备</strong>禁用<strong>状态，在其他系统下，返回</strong>XSTA**</p>\n<p>接下来<strong>补充引用声明</strong>就行了，需要补充的引用声明有两个，一个是<strong>TPD0</strong>这个设备的，还有一个就是<strong>XSTA</strong>的，写引用声明可以参考我论坛里的教程：</p>\n<p><a href=\"http://bbs.pcbeta.com/viewthread-1866928-1-1.html\">http://bbs.pcbeta.com/viewthread-1866928-1-1.html</a></p>\n<p>也可以看本教程最后一块内容：<strong>排错-补充引用声明</strong></p>\n<p>最后补丁结果如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;DELL&quot;, &quot;CBX3&quot;, 0x01072009)\n&#123;\n    External (_SB.PCI0.I2C0.TPD0,DeviceObj)\n    External (_SB.PCI0.I2C0.TPD0.XSTA,MethodObj)\n  \n    Scope (_SB.PCI0.I2C0.TPD0)\n    &#123;\n            Method (_STA, 0, NotSerialized)  &#x2F;&#x2F; _STA: Status\n            &#123;\n                If (_OSI (&quot;Darwin&quot;))\n                &#123;\n                    Return (Zero)\n                &#125;\n                Else\n                &#123;\n                    Return (XSTA())\n                &#125;\n            &#125;\n    &#125;\n&#125;</code></pre>\n\n<p>当然使用这个方法不仅需要补丁，还需要添加<strong>重命名</strong>，防止**_STA**发生冲突。</p>\n<p>我们需要用到<strong>Hex Friend</strong>这个软件，我们使用<strong>Hex Friend</strong>打开<strong>DSDT</strong>，按<strong>Option + F</strong>（你的可能不同）打开<strong>搜索框</strong>，在<strong>搜索框左侧</strong>，将<strong>Hex</strong>改为<strong>Text</strong>，然后在<strong>Find</strong>里搜索你的触摸板设备，我这里是TPD0，左边对于<strong>二进制的数字</strong>，右边对应<strong>字符</strong>，在二进制中会用<strong>高亮</strong>标出你的触摸板设备代表的二进制，然后观察你的这串高亮的数字之后是不是跟着<strong>08</strong>，是的话，你就找到了自己的触摸板设备，接着需要在<strong>右边</strong>找到你的触摸板设备，在沿着你的触摸板设备，找到下面的**_STA<strong>并把它选中，</strong>向右拉长<strong>，同时左边的</strong>高亮数字<strong>也在拉长，大致拉两段多一点就差不多了，复制你</strong>左边的高亮数字<strong>，粘贴在</strong>Find**里搜索，如果除了你现在这段没有搜到其他的，那么就可以了，否则继续拉长再搜索，直到确定只有你这段没有重复！</p>\n<p>然后我们打开<strong>config</strong>在<strong>ACPI</strong>部分中，添加重命名补丁：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Comment：I2C _STA to XSTA in TPD0\n\nFind：5F535441 00A01390 929354    &#x2F;&#x2F;这是我给出的DSDT中的，你们别抄\n\nReplace：58535441 00A01390 929354  &#x2F;&#x2F;在Replace中将开头的5F改成了58，意思可就是将_STA中的下划线改成了X，其他不变</code></pre>\n\n<p>这个拉长的方法是<strong>OC</strong>和<strong>CLOVER</strong>通用的，下面再介绍<strong>CLOVER</strong>可以用的另一种方法。</p>\n<p>在<strong>CLOVER</strong>中，重命名有一个“桥”可以作为<strong>圈定重命名的范围</strong>，这个“桥”也就是<strong>TgtBridge</strong>。如何使用这个<strong>TgtBridge</strong>呢？很简单，首先我们先将**_STA<strong>这四个字符转换为</strong>16进制<strong>，利用</strong>Hackintool<strong>就行，打开</strong>Hackintool<strong>的计算器，在</strong>字符串转换<strong>中，将</strong>_STA<strong>填入到</strong>ASCII<strong>中，复制转换出来的</strong>16进制<strong>，以此类推，再得到</strong>XSTA<strong>的</strong>16进制**，如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Comment：I2C _STA to XSTA in TPD0\n\nFind：5F535441  &#x2F;&#x2F;_STA\n\nReplace：58535441  &#x2F;&#x2F;XSTA\n\nTgtBridge：</code></pre>\n\n<p>那么<strong>TgtBridge</strong>怎么填呢？我们修改的**_STA<strong>是不是在</strong>TPD0<strong>下，那么就把</strong>_STA<strong>的范围也控制在</strong>TPD0<strong>就行了，我们将</strong>TPD0<strong>以上面的方法，也转换为</strong>16进制<strong>就行了，填入到</strong>TgtBridge**中去。最后结果如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">Comment：I2C _STA to XSTA in TPD0\n\nFind：5F535441  &#x2F;&#x2F;_STA\n\nReplace：58535441  &#x2F;&#x2F;XSTA\n\nTgtBridge：54504430  &#x2F;&#x2F;TPD0</code></pre>\n\n\n\n<h1 id=\"排错-补充引用声明\"><a href=\"#排错-补充引用声明\" class=\"headerlink\" title=\"排错-补充引用声明\"></a>排错-补充引用声明</h1><p>正确制作完触摸板补丁后，我们会有一些错误，而处理这些错误，需要我们补充引用声明。</p>\n<p>见我写的这篇教程中：<a href=\"http://bbs.pcbeta.com/viewthread-1866928-1-1.html\">http://bbs.pcbeta.com/viewthread-1866928-1-1.html</a></p>\n<p>比如我们点击<strong>编译</strong>，<strong>GNUM</strong>报错了，那么我们到<strong>DSDT</strong>中去搜素<strong>GNUM</strong>，找到其被定义的位置所在，写成引用<strong>声明External</strong>即可。</p>\n<p>最终完成的补丁如下：</p>\n<pre class=\"line-numbers language-swift\" data-language=\"swift\"><code class=\"language-swift\">DefinitionBlock (&quot;&quot;, &quot;SSDT&quot;, 2, &quot;DELL  &quot;, &quot;TPXX   &quot;, 0x01072009)\n&#123;\n    External (_SB_.GNUM, MethodObj)    &#x2F;&#x2F; 1 Arguments\n    External (_SB_.INUM, MethodObj)    &#x2F;&#x2F; 1 Arguments\n    External (_SB_.PCI0.HIDD, MethodObj)    &#x2F;&#x2F; 5 Arguments\n    External (_SB_.PCI0.HIDG, IntObj)\n    External (_SB_.PCI0.I2C0, DeviceObj)\n    External (_SB_.PCI0.I2C0.I2CX, IntObj)\n    External (_SB_.PCI0.I2CM, MethodObj)    &#x2F;&#x2F; 3 Arguments\n    External (_SB_.PCI0.TP7D, MethodObj)    &#x2F;&#x2F; 6 Arguments\n    External (_SB_.PCI0.TP7G, IntObj)\n    External (_SB_.SHPO, MethodObj)    &#x2F;&#x2F; 2 Arguments\n    External (CBID, FieldUnitObj)\n    External (GPDI, FieldUnitObj)\n    External (TPDB, FieldUnitObj)\n    External (TPDH, FieldUnitObj)\n    External (TPDM, FieldUnitObj)\n    External (TPDS, FieldUnitObj)\n    External (TPDT, FieldUnitObj)\n\n    Scope (\\)\n    &#123;\n        If (_OSI (&quot;Darwin&quot;))\n        &#123;\n            TPDT &#x3D; Zero\n        &#125;\n    &#125;\n\n    Scope (_SB.PCI0.I2C0)\n    &#123;\n        Device (TPXX)\n        &#123;\n            Name (HID2, Zero)\n            Name (SBFB, ResourceTemplate ()\n            &#123;\n                I2cSerialBusV2 (0x0000, ControllerInitiated, 0x00061A80,\n                    AddressingMode7Bit, &quot;NULL&quot;,\n                    0x00, ResourceConsumer, _Y00, Exclusive,\n                    )\n            &#125;)\n            Name (SBFG, ResourceTemplate ()\n            &#123;\n                GpioInt (Level, ActiveLow, ExclusiveAndWake, PullDefault, 0x0000,\n                    &quot;\\\\_SB.PCI0.GPI0&quot;, 0x00, ResourceConsumer, ,\n                    )\n                    &#123;   &#x2F;&#x2F; Pin list\n                        0x0000\n                    &#125;\n            &#125;)\n            Name (SBFI, ResourceTemplate ()\n            &#123;\n                Interrupt (ResourceConsumer, Level, ActiveLow, ExclusiveAndWake, ,, _Y01)\n                &#123;\n                    0x00000000,\n                &#125;\n            &#125;)\n            CreateWordField (SBFB, \\_SB.PCI0.I2C0.TPXX._Y00._ADR, BADR)  &#x2F;&#x2F; _ADR: Address\n            CreateDWordField (SBFB, \\_SB.PCI0.I2C0.TPXX._Y00._SPE, SPED)  &#x2F;&#x2F; _SPE: Speed\n            CreateWordField (SBFG, 0x17, INT1)\n            CreateDWordField (SBFI, \\_SB.PCI0.I2C0.TPXX._Y01._INT, INT2)  &#x2F;&#x2F; _INT: Interrupts\n            Method (GTID, 1, Serialized)\n            &#123;\n                If (Arg0)\n                &#123;\n                    Switch (CBID)\n                    &#123;\n                        Case (0x0896)\n                        &#123;\n                            Return (&quot;DELL0896&quot;)\n                        &#125;\n                        Case (0x0895)\n                        &#123;\n                            Return (&quot;DELL0895&quot;)\n                        &#125;\n                        Case (0x0894)\n                        &#123;\n                            Return (&quot;DELL0894&quot;)\n                        &#125;\n                        Case (0x08A5)\n                        &#123;\n                            Return (&quot;DELL08A5&quot;)\n                        &#125;\n                        Case (0x08A6)\n                        &#123;\n                            Return (&quot;DELL08A6&quot;)\n                        &#125;\n                        Case (0x089C)\n                        &#123;\n                            Return (&quot;DELL089C&quot;)\n                        &#125;\n                        Case (0x089D)\n                        &#123;\n                            Return (&quot;DELL089D&quot;)\n                        &#125;\n                        Case (0x089E)\n                        &#123;\n                            Return (&quot;DELL089E&quot;)\n                        &#125;\n                        Case (0x089F)\n                        &#123;\n                            Return (&quot;DELL089F&quot;)\n                        &#125;\n                        Case (0x08A7)\n                        &#123;\n                            Return (&quot;DELL08A7&quot;)\n                        &#125;\n                        Case (0x08A8)\n                        &#123;\n                            Return (&quot;DELL08A8&quot;)\n                        &#125;\n                        Case (0x08A9)\n                        &#123;\n                            Return (&quot;DELL08A9&quot;)\n                        &#125;\n                        Case (0x08BC)\n                        &#123;\n                            Return (&quot;DELL08BC&quot;)\n                        &#125;\n                        Case (0x08BD)\n                        &#123;\n                            Return (&quot;DELL08BD&quot;)\n                        &#125;\n                        Case (0x08C0)\n                        &#123;\n                            Return (&quot;DELL08C0&quot;)\n                        &#125;\n                        Case (0x0949)\n                        &#123;\n                            Return (&quot;DELL0949&quot;)\n                        &#125;\n                        Default\n                        &#123;\n                            Return (&quot;DELL0949&quot;)\n                        &#125;\n\n                    &#125;\n                &#125;\n                Else\n                &#123;\n                    Return (0x20)\n                &#125;\n            &#125;\n\n            Method (_INI, 0, Serialized)  &#x2F;&#x2F; _INI: Initialize\n            &#123;\n                INT1 &#x3D; GNUM (GPDI)\n                INT2 &#x3D; INUM (GPDI)\n                If ((TPDM &#x3D;&#x3D; Zero))\n                &#123;\n                    SHPO (GPDI, One)\n                &#125;\n\n                If (One)\n                &#123;\n                    _HID &#x3D; &quot;SYNA2393&quot;\n                    HID2 &#x3D; 0x20\n                    Return (Zero)\n                &#125;\n\n                If (One)\n                &#123;\n                    _HID &#x3D; &quot;06CB2846&quot;\n                    HID2 &#x3D; 0x20\n                    Return (Zero)\n                &#125;\n\n                If (One)\n                &#123;\n                    _HID &#x3D; &quot;ALPS0000&quot;\n                    HID2 &#x3D; 0x20\n                    BADR &#x3D; 0x2C\n                    Return (Zero)\n                &#125;\n\n                If (One)\n                &#123;\n                    _HID &#x3D; GTID (One)\n                    HID2 &#x3D; TPDH &#x2F;* External reference *&#x2F;\n                    Switch (CBID)\n                    &#123;\n                        Case (0x08BC)\n                        &#123;\n                            BADR &#x3D; 0x15\n                        &#125;\n                        Case (0x08BD)\n                        &#123;\n                            BADR &#x3D; TPDB &#x2F;* External reference *&#x2F;\n                        &#125;\n                        Case (0x08C0)\n                        &#123;\n                            BADR &#x3D; TPDB &#x2F;* External reference *&#x2F;\n                        &#125;\n                        Default\n                        &#123;\n                            BADR &#x3D; TPDB &#x2F;* External reference *&#x2F;\n                        &#125;\n\n                    &#125;\n\n                    If ((TPDS &#x3D;&#x3D; Zero))\n                    &#123;\n                        SPED &#x3D; 0x000186A0\n                    &#125;\n\n                    If ((TPDS &#x3D;&#x3D; One))\n                    &#123;\n                        SPED &#x3D; 0x00061A80\n                    &#125;\n\n                    If ((TPDS &#x3D;&#x3D; 0x02))\n                    &#123;\n                        SPED &#x3D; 0x000F4240\n                    &#125;\n\n                    Return (Zero)\n                &#125;\n            &#125;\n\n            Name (_HID, &quot;XXXX0000&quot;)  &#x2F;&#x2F; _HID: Hardware ID\n            Name (_CID, &quot;PNP0C50&quot; &#x2F;* HID Protocol Device (I2C bus) *&#x2F;)  &#x2F;&#x2F; _CID: Compatible ID\n            Name (_S0W, 0x03)  &#x2F;&#x2F; _S0W: S0 Device Wake State\n            Method (_DSM, 4, Serialized)  &#x2F;&#x2F; _DSM: Device-Specific Method\n            &#123;\n                If ((Arg0 &#x3D;&#x3D; HIDG))\n                &#123;\n                    Return (HIDD (Arg0, Arg1, Arg2, Arg3, HID2))\n                &#125;\n\n                If ((Arg0 &#x3D;&#x3D; TP7G))\n                &#123;\n                    Return (TP7D (Arg0, Arg1, Arg2, Arg3, SBFB, SBFG))\n                &#125;\n\n                Return (Buffer (One)\n                &#123;\n                     0x00                                             &#x2F;&#x2F; .\n                &#125;)\n            &#125;\n\n            Method (_STA, 0, NotSerialized)  &#x2F;&#x2F; _STA: Status\n            &#123;\n                If (_OSI (&quot;Darwin&quot;))\n                &#123;\n                    Return (0x0F)\n                &#125;\n                Else\n                &#123;\n                    Return (Zero)\n                &#125;\n            &#125;\n\n            Method (_CRS, 0, NotSerialized)  &#x2F;&#x2F; _CRS: Current Resource Settings\n            &#123;\n                Return (ConcatenateResTemplate (I2CM (I2CX, BADR, SPED), SBFG))\n            &#125;\n        &#125;\n    &#125;\n&#125;\n</code></pre>\n\n<p>这里也给出样本的<strong>DSDT</strong>与<strong>SSDT</strong>：</p>\n<p><a href=\"https://pan.baidu.com/s/1eGHOyGc6AleEr1aHZxWYaA\">链接: https://pan.baidu.com/s/1eGHOyGc6AleEr1aHZxWYaA</a></p>\n<p>提取密码：<strong>s9t2</strong></p>\n<h1 id=\"鸣谢\"><a href=\"#鸣谢\" class=\"headerlink\" title=\"鸣谢\"></a>鸣谢</h1><p>特别感谢以下几位大佬的支持：</p>\n<p><strong>@penghuibingzhou</strong></p>\n<p>本教程建立在<strong>penghuibingzhou</strong>的教程上，进行了修改，本家如下：</p>\n<p><a href=\"https://www.penghubingzhou.cn/2019/01/06/VoodooI2C%20DSDT%20Edit/\">https://www.penghubingzhou.cn/2019/01/06/VoodooI2C%20DSDT%20Edit/</a></p>\n<p><strong>@Bat.bat</strong></p>\n<p>感谢<strong>Bat大佬</strong>的鼎力支持！</p>\n<p>本教程由<strong>Bat</strong>进行指导和修改！在<strong>Bat</strong>大佬的大力帮助下，教程进行了修改和完善，纠正了许多错误的地方！</p>\n<p>加入博主的Hackintosh交流群：<code>679838716</code></p>\n","feature":true,"text":"前言当你的触摸板无法正常工作时，或者一点也不工作时，那你可能就需要修改ACPI来修补修补你的触摸板来，使其能够正常工作。毕竟一台笔记本电脑，用不了触摸板实在是太难受了。（如果你有钱买妙控板，那就另当别论了） 确定设备路径1.进入Windows系统，打开设备管理器，找到人体输入学设...","link":"","photos":[],"count_time":{"symbolsCount":"30k","symbolsTime":"27 mins."},"categories":[{"name":"技术","slug":"技术","count":10,"path":"api/categories/技术.json"}],"tags":[{"name":"黑苹果","slug":"黑苹果","count":7,"path":"api/tags/黑苹果.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%89%8D%E8%A8%80\"><span class=\"toc-text\">前言</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A1%AE%E5%AE%9A%E8%AE%BE%E5%A4%87%E8%B7%AF%E5%BE%84\"><span class=\"toc-text\">确定设备路径</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A1%AE%E5%AE%9AAPIC-PIn\"><span class=\"toc-text\">确定APIC PIn</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#APIC%E4%B8%AD%E6%96%AD%EF%BC%8CGPIO%E4%B8%AD%E6%96%AD%E4%B8%8E%E8%BD%AE%E8%AF%A2\"><span class=\"toc-text\">APIC中断，GPIO中断与轮询</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E8%A7%A6%E6%91%B8%E6%9D%BF%E7%83%AD%E8%A1%A5%E4%B8%81%E5%88%B6%E4%BD%9C\"><span class=\"toc-text\">触摸板热补丁制作</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#GPIO%E4%B8%AD%E6%96%AD%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">GPIO中断实现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BD%AE%E8%AF%A2%E6%A8%A1%E5%BC%8F%E5%AE%9E%E7%8E%B0\"><span class=\"toc-text\">轮询模式实现</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%A6%81%E7%94%A8%E5%8E%9F%E8%A7%A6%E6%91%B8%E6%9D%BF%E8%AE%BE%E5%A4%87\"><span class=\"toc-text\">禁用原触摸板设备</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A2%84%E7%BD%AE%E5%8F%98%E9%87%8F%E6%B3%95%E7%A6%81%E7%94%A8%E5%8E%9F%E8%AE%BE%E5%A4%87\"><span class=\"toc-text\">预置变量法禁用原设备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#STA%E4%BF%AE%E6%94%B9%E6%B3%95%E7%A6%81%E7%94%A8%E5%8E%9F%E8%AE%BE%E5%A4%87\"><span class=\"toc-text\">_STA修改法禁用原设备</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%8E%92%E9%94%99-%E8%A1%A5%E5%85%85%E5%BC%95%E7%94%A8%E5%A3%B0%E6%98%8E\"><span class=\"toc-text\">排错-补充引用声明</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%B8%A3%E8%B0%A2\"><span class=\"toc-text\">鸣谢</span></a></li></ol>","author":{"name":"神楽小白(GZ小白)的部落阁","slug":"blog-author","avatar":"https://i.loli.net/2021/05/15/QdcDz8P721AfEMR.jpg","link":"/","description":"这是一个正常的人(确信)!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/GZXiaoBai"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/355276854"}}}},"mapped":true,"prev_post":{"title":"收费等本博客必读内容","uid":"ad63b7fcc4a1d5259db525f88fae6892","slug":"收费等本博客必读内容","date":"2021-06-25T06:01:07.000Z","updated":"2021-06-25T09:38:49.818Z","comments":true,"path":"api/articles/收费等本博客必读内容.json","keywords":null,"cover":"https://i.loli.net/2021/06/25/o4IacuHiMjyF3DC.jpg","text":"前言请仔细阅读此此文章，内有博客须知，包含有偿求助等事项。 关于博客内容 本博客的一切内容均为无偿提供给各位浏览者的，并且会保持更新，如果对内容有提议可以在博客的评论区中提出，也可以加本人QQ346735604提出问题 博客主要更新的内容为： 黑苹果相关文章 ACG/动漫/游戏相...","link":"","photos":[],"count_time":{"symbolsCount":746,"symbolsTime":"1 mins."},"categories":[{"name":"其它","slug":"其它","count":1,"path":"api/categories/其它.json"}],"tags":[{"name":"说明","slug":"说明","count":1,"path":"api/tags/说明.json"}],"author":{"name":"神楽小白(GZ小白)的部落阁","slug":"blog-author","avatar":"https://i.loli.net/2021/05/15/QdcDz8P721AfEMR.jpg","link":"/","description":"这是一个正常的人(确信)!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/GZXiaoBai"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/355276854"}}}},"feature":true},"next_post":{"title":"进阶：电池热补丁（Battery-Hotpatch）之路","uid":"0b0d58a227f41342a3d42cd20e4f9a94","slug":"进阶：电池热补丁（Battery-Hotpatch）之路","date":"2020-05-16T14:12:07.000Z","updated":"2021-06-04T10:14:28.740Z","comments":true,"path":"api/articles/进阶：电池热补丁（Battery-Hotpatch）之路.json","keywords":null,"cover":"https://i.loli.net/2021/05/02/WEqjSwnGl8LcAQB.png","text":"前言在有了OpenCore的引导后，已经不在推荐使用DSDT了，况且，现在也是主要推广热补丁（HotPatch），热补丁具有比DSDT更好的灵活性，于是便开始写这篇文章了。 准备步骤首先，我们需要下载我提供的电池热补丁的样本（SSDT-BATT.dsl)。同时，我还准备了联想X2...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"18 mins."},"categories":[{"name":"技术","slug":"技术","count":10,"path":"api/categories/技术.json"}],"tags":[{"name":"黑苹果","slug":"黑苹果","count":7,"path":"api/tags/黑苹果.json"}],"author":{"name":"神楽小白(GZ小白)的部落阁","slug":"blog-author","avatar":"https://i.loli.net/2021/05/15/QdcDz8P721AfEMR.jpg","link":"/","description":"这是一个正常的人(确信)!","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{"github":{"icon":"/svg/github.svg","link":"https://github.com/GZXiaoBai"},"bilibili":{"icon":"/svg/bilibili.svg","link":"https://space.bilibili.com/355276854"}}}},"feature":true}}